# PHP CircleCI 2.0 configuration file
# See: https://circleci.com/docs/2.0/language-php/
version: 2

# Define a job to be invoked later in a workflow.
# See: https://circleci.com/docs/2.0/configuration-reference/#jobs
jobs:
  build:
    # Specify the execution environment. You can specify an image from Dockerhub or use one of our Convenience Images from CircleCI's Developer Hub.
    # See: https://circleci.com/docs/2.0/configuration-reference/#docker-machine-macos-windows-executor
    docker:
      # Specify the version you desire here
      - image: cimg/php:8.3

    # Add steps to the job
    # See: https://circleci.com/docs/2.0/configuration-reference/#steps
    steps:
      - checkout

      - run: sudo apt update # PHP CircleCI 2.0 Configuration File# PHP CircleCI 2.0 Configuration File sudo apt install zlib1g-dev libsqlite3-dev

      # Download and cache dependencies
      - restore_cache:
          keys:
            # "composer.lock" can be used if it is committed to the repo
            - v1-dependencies-{{ checksum "composer.json" }}
            # fallback to using the latest cache if no exact match is found
            - v1-dependencies-

      - run: composer install -n --prefer-dist

      - save_cache:
          key: v1-dependencies-{{ checksum "composer.json" }}
          paths:
            - ./vendor

  coding-standard:
    docker:
      - image: cimg/php:8.3
    steps:
      - checkout
      - run: sudo apt update
      - restore_cache:
          keys:
            - v1-dependencies-{{ checksum "composer.json" }}
            - v1-dependencies-
      - run: composer install -n --prefer-dist
      - save_cache:
          key: v1-dependencies-{{ checksum "composer.json" }}
          paths:
            - ./vendor
      - run: composer cs-check
  static-analysis:
    docker:
      - image: cimg/php:8.3
    steps:
      - checkout
      - run: sudo apt update
      - restore_cache:
          keys:
            - v1-dependencies-{{ checksum "composer.json" }}
            - v1-dependencies-
      - run: composer install -n --prefer-dist
      - save_cache:
          key: v1-dependencies-{{ checksum "composer.json" }}
          paths:
            - ./vendor
      - run: vendor/bin/phpstan.phar analyse
  test:
    docker:
      - image: cimg/php:8.3
        environment:
          DATABASE_TEST_URL: sqlite://./testdb.sqlite
    steps:
      - checkout
      - run: sudo apt update
      - restore_cache:
          keys:
            - v1-dependencies-{{ checksum "composer.json" }}
            - v1-dependencies-
      - run: composer install -n --prefer-dist
      - save_cache:
          key: v1-dependencies-{{ checksum "composer.json" }}
          paths:
            - ./vendor

      - run: sudo pecl install xdebug
      - run: sudo docker-php-ext-enable xdebug

      # run tests with phpunit or codecept
      - run: cp config/app_local.example.php config/app_local.php
      - run: cp config/.env.example config/.env
      - run:
          name: "Run tests"
          command: |
            mkdir -p ~/phpunit
            ./vendor/bin/phpunit --log-junit ~/phpunit/junit.xml --coverage-html build/coverage
          environment:
            XDEBUG_MODE: coverage
          when: always
      - store_test_results:
          path: ~/phpunit
      - store_artifacts:
          path: build/coverage

workflows:
  version: 2
  build_test:
    jobs:
      - build
      - coding-standard:
          requires:
            - build
      - static-analysis:
          requires:
            - build
      - test:
          requires:
            - build
